<%# default partial to display solr document fields in catalog show view -%>
<%= render_cover_image document %>
<%# Statement of responsiblity and publication date. -%>
<%= item_subheading marc_display(document, 'statement_of_responsibility') %>
<%= item_subheading marc_display(document, 'imprint') %>

<% if document['abstract_display'] %>
    <div class="abstract">
        <%= document['abstract_display'][0] %>
    </div>
<% end %>


<%# Check for access urls.  -%>
<% if has_access_urls(document) == true %>
    <hr/>
    <h4>Availability</h4>
        <ul>
        <% access_urls(document).each do |access| -%>
            <%= access['url'] %>
            <li><a href="<%= access[:url] %>"><%= access[:label] %></a></li>
        <% end -%>
        </ul>
<% end %>

<div id="availability">
    <script>
        var availabilityService = '<%= availability_service_url %>';
    </script>
    <!-- Populated by `catalog_record_availability` <script> above. -->
</div>


<hr/>
<h4>Details</h4>
<dl class="dl-horizontal  dl-invert record-page">
  <% document_show_fields(document).each do |solr_fname, field| -%>
    <% if should_render_show_field? document, field %>
        <% if field.linked_fielded_search %>
            <dt class="blacklight-<%= solr_fname.parameterize %>">
                <%= render_document_show_field_label document, :field => solr_fname %></dt>
            <% if field.multi %>
                <% document[field.field].each do |fvalue| %>
                    <dd class="blacklight-<%= solr_fname.parameterize %>"><%= fielded_search(fvalue, field.linked_fielded_search) %></dd>
                <% end -%>
            <% else %>
                <dd class="blacklight-<%= solr_fname.parameterize %>">
                    <%= fielded_search(document[field.field], field.linked_fielded_search) %>
                </dd>
            <% end -%>
        <% else %>
            <dt class="blacklight-<%= solr_fname.parameterize %>"><%= render_document_show_field_label document, :field => solr_fname %></dt>
            <dd class="blacklight-<%= solr_fname.parameterize %>">
                <% if field.show_icon %>
                    <%= icon(document[field.field]) %>
                <% end -%>
                <%= render_document_show_field_value document, :field => solr_fname %>
            </dd>
        <% end -%>
    <% elsif field.hot_link %>
        <% values = hot_link(document.send(field.doc_key), field.index) %>
        <% if values %>
            <dt class="blacklight-<%= solr_fname.parameterize %>"><%= render_document_show_field_label document, :field => solr_fname %></dt>
            <% values.each do |anchor| -%>
                <dd><%= anchor %></dd>
            <% end -%>
        <% end -%>
    <% end -%>
  <% end -%>

  <%# Calls method with notes config will display nothing if note doesn't
  exist or fetching for MARC fails -%>
  <%= render_record_notes document %>

  <% if document.has_uniform_titles? %>
    <dt class="blacklight-uniform_title_display">Uniform Title</dt>
      <% document.get_uniform_titles.each do |uniform_title| %>
        <dd class="blacklight-uniform_titles">
          <% uniform_title['title'].each do |subfield| %>
            <%= uniform_title_author_display_search(subfield['query'], uniform_title['author'], subfield['display']) %>
          <% end %>
        </dd>
      <% end %>
  <% end %>

  <% if document.has_related_works? %>
    <dt class="blacklight-uniform_title_display">Related Work</dt>
      <% document.get_related_works.each do |related_work| %>
        <dd class="blacklight-uniform_titles">
          <% if related_work['author'] && !related_work['author'].empty? %>
            <%= uniform_title_author_display_search(related_work['title'][0]['query'], related_work['author'], related_work['author']) %>
          <% end %>
          <% related_work['title'].each do |subfield| %>
            <%= uniform_title_author_display_search(subfield['query'], related_work['author'], subfield['display']) %>
          <% end %>
        </dd>
      <% end %>
  <% end %>

</dl>

<% if document.has_toc? %>
  <table>
    <tr><th colspan="7" style="text-align:center">Table of Contents</th></tr>
  <% document.get_toc.chapters.each do |chapter|  %>
    <tr>
      <% if chapter['indent'] == "1" %>
        <td style="padding-left:10px; padding-right:10px"><strong><%= chapter['label'] %></strong></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      <% elsif chapter['indent'] == "2" %>
        <td>&nbsp;</td>
        <td style="padding-left:10px; padding-right:10px"><strong><%= chapter['label'] %></strong></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      <% elsif chapter['indent'] == "3" %>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td style="padding-left:10px; padding-right:10px"><strong><%= chapter['label'] %></strong></td>
        <td>&nbsp;</td>
      <% else %>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td style="padding-left:10px; padding-right:10px"><strong><%= chapter['label'] %></strong></td>
      <% end %>
      <td style="padding-left:10px; padding-right:10px"><%= chapter['title'] %></td>
      <td style="padding-left:10px; padding-right:10px">
      <% chapter['authors'].each do |author| %>
          <a href="<%= url_for(:controller => 'catalog', :action => 'index', :q => author, :search_field => 'author') %>"><%= author %></a><%= ', ' unless author == chapter['authors'].last %>
      <% end %>
      </td>
      <td style="padding-left:10px; padding-right:10px"><%= chapter['page'] %></td>
    </tr>
  <% end  %>
  </table>
<% end %>
